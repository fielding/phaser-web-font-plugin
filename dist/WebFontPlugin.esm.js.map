{"mappings":"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","sources":["src/WebFontPlugin.ts","src/WebFontFile.ts"],"sourcesContent":["/**\n * @author       Fielding Johnston <fielding@justfielding.com> \n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\nimport WebFontFile from './WebFontFile';\n\nexport default class WebFontPlugin extends Phaser.Plugins.BasePlugin {\n  constructor(pluginManager: Phaser.Plugins.PluginManager) {\n    super(pluginManager);\n\n    pluginManager.registerFileType('webfont', loaderCallback);\n\n    if (!document.fonts) {\n      console.warn('Browser does not support FontFaceSet');\n    }\n  }\n}\n\n// TODO: add support for array of objects as key\nconst loaderCallback = function (\n  this: Phaser.Loader.LoaderPlugin,\n  key: WebFontFileConfig | string,\n  url: string,\n  variants: string[],\n  testString?: string,\n  legacyTimeout?: number\n) {\n\n  this.addFile(new WebFontFile(this, key, url, variants, testString, legacyTimeout));\n\n  return this;\n};\n","/**\n * @author       Fielding Johnston <fielding@justfielding.com> \n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nconst IsPlainObject = Phaser.Utils.Objects.IsPlainObject;\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\n\n\nexport default class WebFontFile extends Phaser.Loader.File {\n  variantsProcessed: string[] = [];\n\n  constructor(loader: Phaser.Loader.LoaderPlugin, key: WebFontFileConfig | string, url?: string, variants?: string[], testString?: string, legacyTimeout?: number) {\n\n    if (IsPlainObject(key as WebFontFileConfig)) {\n      const config = key as WebFontFileConfig;\n\n      key = GetFastValue(config, 'key');\n      url = GetFastValue(config, 'url');\n      variants = GetFastValue(config, 'variants', [ 'normal' ]);\n      testString = GetFastValue(config, 'testString');\n      legacyTimeout = GetFastValue(config, 'legacyTimeout');\n    } else if (variants === undefined) {\n      variants = [ 'normal' ];\n    }\n\n\n    const fileConfig = {\n      type: 'webfont',\n      key,\n      url,\n      config: {\n        variants,\n        testString,\n        legacyTimeout,\n      }\n    }\n\n    super(loader, fileConfig as Phaser.Types.Loader.FileConfig);\n  }\n\n  load(): this {\n    const link = document.createElement('link');\n    link.href = this.url as string;\n    link.rel = 'stylesheet';\n    link.onload = document.fonts ? this.loadFont.bind(this) : this.loadFontLegacy.bind(this);\n    \n    document.head.appendChild(link);\n    return this;\n  }\n\n  onLoad() {\n    this.loader.nextFile(this, true);\n  }\n\n  onVariantProcessed(variant: string) {\n    this.variantsProcessed.push(variant);\n    if (this.config.variants.length === this.variantsProcessed.length) this.onLoad();\n  }\n\n  \n  private loadFont() {\n    this.config.variants.forEach((variant: string) => {\n      document.fonts.load(`${variant} 12px '${this.key}'`, this.config?.testString)\n      .then(this.onVariantProcessed.bind(this, variant))\n      .catch((err) => {\n        console.warn('WebFontPlugin Error: ', err);\n        this.onVariantProcessed(variant);\n      });\n    })\n  }\n\n  // Note: not 100% sure this works.. it seemed to with my initial testings though\n  private loadFontLegacy() {\n    return Promise.all(\n      this.config.variants.map((variant: string) => {\n        return new Promise<void>((resolve)  => {\n          const el = document.createElement('span');\n          el.style.visibility = 'hidden';\n          el.style.position = 'absolute';\n          el.style.font = variant + ' 12px ' + this.config.font;\n          el.innerText = 'abc';\n          document.body.appendChild(el);\n\n          setTimeout(() => {\n            document.body.removeChild(el);\n            resolve();\n          }, this.config?.legacyTimeout || 50);\n        });\n\n      })\n    ).then(this.onLoad.bind(this));\n  }\n}"],"names":[],"version":3,"file":"WebFontPlugin.esm.js.map"}